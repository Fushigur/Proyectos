# Generated from ./traductorPyaJava.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,92,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,5,4,55,8,4,10,4,12,4,
        58,9,4,1,5,4,5,61,8,5,11,5,12,5,62,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,
        9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,3,14,82,8,14,1,14,
        1,14,1,15,4,15,87,8,15,11,15,12,15,88,1,15,1,15,0,0,16,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,1,0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
        1,0,48,57,2,0,9,9,32,32,95,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
        7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,1,33,1,0,0,0,3,35,1,0,0,0,5,39,
        1,0,0,0,7,46,1,0,0,0,9,52,1,0,0,0,11,60,1,0,0,0,13,64,1,0,0,0,15,
        66,1,0,0,0,17,68,1,0,0,0,19,70,1,0,0,0,21,72,1,0,0,0,23,74,1,0,0,
        0,25,76,1,0,0,0,27,78,1,0,0,0,29,81,1,0,0,0,31,86,1,0,0,0,33,34,
        5,61,0,0,34,2,1,0,0,0,35,36,5,100,0,0,36,37,5,101,0,0,37,38,5,102,
        0,0,38,4,1,0,0,0,39,40,5,114,0,0,40,41,5,101,0,0,41,42,5,116,0,0,
        42,43,5,117,0,0,43,44,5,114,0,0,44,45,5,110,0,0,45,6,1,0,0,0,46,
        47,5,112,0,0,47,48,5,114,0,0,48,49,5,105,0,0,49,50,5,110,0,0,50,
        51,5,116,0,0,51,8,1,0,0,0,52,56,7,0,0,0,53,55,7,1,0,0,54,53,1,0,
        0,0,55,58,1,0,0,0,56,54,1,0,0,0,56,57,1,0,0,0,57,10,1,0,0,0,58,56,
        1,0,0,0,59,61,7,2,0,0,60,59,1,0,0,0,61,62,1,0,0,0,62,60,1,0,0,0,
        62,63,1,0,0,0,63,12,1,0,0,0,64,65,5,43,0,0,65,14,1,0,0,0,66,67,5,
        45,0,0,67,16,1,0,0,0,68,69,5,42,0,0,69,18,1,0,0,0,70,71,5,47,0,0,
        71,20,1,0,0,0,72,73,5,40,0,0,73,22,1,0,0,0,74,75,5,41,0,0,75,24,
        1,0,0,0,76,77,5,44,0,0,77,26,1,0,0,0,78,79,5,58,0,0,79,28,1,0,0,
        0,80,82,5,13,0,0,81,80,1,0,0,0,81,82,1,0,0,0,82,83,1,0,0,0,83,84,
        5,10,0,0,84,30,1,0,0,0,85,87,7,3,0,0,86,85,1,0,0,0,87,88,1,0,0,0,
        88,86,1,0,0,0,88,89,1,0,0,0,89,90,1,0,0,0,90,91,6,15,0,0,91,32,1,
        0,0,0,5,0,56,62,81,88,1,6,0,0
    ]

class traductorPyaJavaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    DEF = 2
    RETURN = 3
    PRINT = 4
    IDENTIFIER = 5
    NUMBER = 6
    PLUS = 7
    MINUS = 8
    MULTIPLY = 9
    DIVIDE = 10
    LPAREN = 11
    RPAREN = 12
    COMMA = 13
    COLON = 14
    NEWLINE = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'def'", "'return'", "'print'", "'+'", "'-'", "'*'", 
            "'/'", "'('", "')'", "','", "':'" ]

    symbolicNames = [ "<INVALID>",
            "DEF", "RETURN", "PRINT", "IDENTIFIER", "NUMBER", "PLUS", "MINUS", 
            "MULTIPLY", "DIVIDE", "LPAREN", "RPAREN", "COMMA", "COLON", 
            "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "DEF", "RETURN", "PRINT", "IDENTIFIER", "NUMBER", 
                  "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "LPAREN", "RPAREN", 
                  "COMMA", "COLON", "NEWLINE", "WS" ]

    grammarFileName = "traductorPyaJava.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


